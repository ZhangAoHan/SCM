C51 COMPILER V9.00   MAIN                                                                  02/03/2011 22:43:20 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE MAIN.C

line level    source

   1          #include "reg52.h"
   2          #include "main.h"
   3          #include "mfrc522.h"    
   4          #include <string.h>
   5          //M1¿¨µÄÄ³Ò»¿éÐ´ÎªÈçÏÂ¸ñÊ½£¬Ôò¸Ã¿éÎªÇ®°ü£¬¿É½ÓÊÕ¿Û¿îºÍ³äÖµÃüÁî
   6          //4×Ö½Ú½ð¶î£¨µÍ×Ö½ÚÔÚÇ°£©£«4×Ö½Ú½ð¶îÈ¡·´£«4×Ö½Ú½ð¶î£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ·È¡·´£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ
             -·È¡·´ 
   7          unsigned char code data2[4]  = {0x12,0,0,0};
   8          unsigned char code DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; 
   9          unsigned char g_ucTempbuf[20];    
  10          unsigned char idata MLastSelectedSnr[4];
  11          unsigned char idata RevBuffer[30];  
  12          unsigned char data SerBuffer[20]; 
  13          bit CmdValid;                      
  14          
  15          void iccardcode()
  16          {            
  17   1              unsigned char cmd;
  18   1              unsigned char status;
  19   1              
  20   1              cmd = RevBuffer[0];
  21   1              switch(cmd)
  22   1              {
  23   2                      case 1:     // Halt the card     //ÖÕÖ¹¿¨µÄ²Ù×÷
  24   2                              status= PcdHalt();;                     
  25   2                              RevBuffer[0]=1;
  26   2                              RevBuffer[1]=status;
  27   2                              break;                  
  28   2                      case 2:     // Request,Anticoll,Select,return CardType(2 bytes)+CardSerialNo(4 bytes)
  29   2                                      // Ñ°¿¨£¬·À³åÍ»£¬Ñ¡Ôñ¿¨    ·µ»Ø¿¨ÀàÐÍ£¨2 bytes£©+ ¿¨ÏµÁÐºÅ(4 bytes)
  30   2                              status= PcdRequest(RevBuffer[1],&RevBuffer[2]);
  31   2                              if(status!=0)
  32   2                              {
  33   3                                      status= PcdRequest(RevBuffer[1],&RevBuffer[2]);
  34   3                                      if(status!=0)                           
  35   3                                      {
  36   4                                              RevBuffer[0]=1; 
  37   4                                              RevBuffer[1]=status;
  38   4                                              break;
  39   4                                      }
  40   3                              }  
  41   2                              RevBuffer[0]=3; 
  42   2                              RevBuffer[1]=status;
  43   2                              break;
  44   2                              
  45   2                      case 3:                         // ·À³åÍ» ¶Á¿¨µÄÏµÁÐºÅ MLastSelectedSnr
  46   2                              status = PcdAnticoll(&RevBuffer[2]);
  47   2                              if(status!=0)
  48   2                              {
  49   3                                      RevBuffer[0]=1; 
  50   3                                      RevBuffer[1]=status;
  51   3                                      break;
  52   3                              }
  53   2                              memcpy(MLastSelectedSnr,&RevBuffer[2],4);
  54   2                              RevBuffer[0]=5;
C51 COMPILER V9.00   MAIN                                                                  02/03/2011 22:43:20 PAGE 2   

  55   2                              RevBuffer[1]=status;
  56   2                              break;  
  57   2                      case 4:                             // Ñ¡Ôñ¿¨ Select Card
  58   2                              status=PcdSelect(MLastSelectedSnr);
  59   2                              if(status!=MI_OK)
  60   2                              {
  61   3                                      RevBuffer[0]=1; 
  62   3                                      RevBuffer[1]=status;
  63   3                                      break;
  64   3                              }
  65   2                              RevBuffer[0]=3;
  66   2                              RevBuffer[1]=status;                    
  67   2                              break;
  68   2                      case 5:     // Key loading into the MF RC500's EEPROM
  69   2                  status = PcdAuthState(RevBuffer[1], RevBuffer[3], DefaultKey, MLastSelectedSnr);// Ð£Ñé¿¨ÃÜÂë
  70   2                              RevBuffer[0]=1;
  71   2                              RevBuffer[1]=status;                    
  72   2                              break;                                                  
  73   2                      case 6: 
  74   2                              RevBuffer[0]=1;
  75   2                              RevBuffer[1]=status;                    
  76   2                              break;                          
  77   2                      case 7:     
  78   2                      RevBuffer[0]=1;
  79   2                              RevBuffer[1]=status;                    
  80   2                              break;
  81   2                      case 8:     // Read the mifare card
  82   2                                  // ¶Á¿¨
  83   2                              status=PcdRead(RevBuffer[1],&RevBuffer[2]);
  84   2                              if(status==0)
  85   2                              {RevBuffer[0]=17;}
  86   2                              else
  87   2                              {RevBuffer[0]=1;}
  88   2                              RevBuffer[1]=status;                    
  89   2                              break;
  90   2                      case 9:     // Write the mifare card
  91   2                                  // Ð´¿¨  ÏÂÔØÃÜÂë
  92   2                              status=PcdWrite(RevBuffer[1],&RevBuffer[2]);
  93   2                              RevBuffer[0]=1;
  94   2                              RevBuffer[1]=status;                    
  95   2                              break;
  96   2                      case 10:
  97   2                  PcdValue(RevBuffer[1],RevBuffer[2],&RevBuffer[3]);
  98   2                              RevBuffer[0]=1; 
  99   2                              RevBuffer[1]=status;
 100   2                              break;
 101   2                      case 12:    // ²ÎÊýÉèÖÃ
 102   2                          PcdBakValue(RevBuffer[1], RevBuffer[2]);
 103   2                              RevBuffer[0]=1; //contact
 104   2                              RevBuffer[1]=0;
 105   2                              break;          
 106   2              }
 107   1      
 108   1      
 109   1      
 110   1      
 111   1      
 112   1      
 113   1              }
 114          /////////////////////////////////////////////////////////////////////
 115          //ÏµÍ³³õÊ¼»¯
 116          /////////////////////////////////////////////////////////////////////
C51 COMPILER V9.00   MAIN                                                                  02/03/2011 22:43:20 PAGE 3   

 117          void InitializeSystem()
 118          {
 119   1          P0 = 0xFF; P1 = 0xFF; P3 = 0xFF;
 120   1      
 121   1      
 122   1      
 123   1              ET2 = 0;        
 124   1              T2CON = 0x04;           
 125   1          PCON = 0x80;                
 126   1          SCON = 0x70;                 
 127   1          TMOD = 0x21;        //TMOD = 0x22;
 128   1      
 129   1              TH1   = BAUD_9600;
 130   1              TL1   = TH1;
 131   1              TR1   = 1;             // ²¨ÌØÂÊ·¢ÉúÆ÷
 132   1      
 133   1              TH0 = 0x60;
 134   1          TL0 = 0x60;
 135   1          TR0 = 0;
 136   1          
 137   1          ET0=0;
 138   1              ET1=0;
 139   1              EA=1;
 140   1              EX0=1;
 141   1              IT0 = 1;        
 142   1              TR2=0;
 143   1              ES = 1;    
 144   1              CmdValid=0; 
 145   1      
 146   1           LED_GREEN = 1;
 147   1           PcdReset();
 148   1           PcdAntennaOff(); 
 149   1           PcdAntennaOn();  
 150   1               M500PcdConfigISOType( 'A' );
 151   1           LED_GREEN = 0;
 152   1               delay_10ms(10);        
 153   1           LED_GREEN = 1;
 154   1               delay_10ms(10);
 155   1           LED_GREEN = 0;
 156   1      }
 157          
 158          /////////////////////////////////////////////////////////////////////
 159          //ÓÃT2×öÑÓÊ±×Ó³ÌÐò
 160          /////////////////////////////////////////////////////////////////////
 161          
 162          
 163          ///////////////////////////////////////////////////////////////////////
 164          // ½ÓÊÕºÍ·¢ËÍÖÐ¶Ï
 165          ///////////////////////////////////////////////////////////////////////
 166          void isr_UART(void) interrupt 4 using 1
 167          {
 168   1          unsigned char len, i;
 169   1              unsigned int j=0;
 170   1              
 171   1              if(RI)
 172   1              {               
 173   2                      len=SBUF;
 174   2                      RI=0;   
 175   2                      for(i=0;i<len;i++)
 176   2                      {
 177   3                              while(!RI)
 178   3                              {
C51 COMPILER V9.00   MAIN                                                                  02/03/2011 22:43:20 PAGE 4   

 179   4                                      j++;
 180   4                                      if(j>1000)
 181   4                                      {
 182   5                                          break;
 183   5                                      }
 184   4                              }
 185   3                              if(j<1000)
 186   3                              {
 187   4                                      RevBuffer[i]=SBUF;
 188   4                                      RI=0;
 189   4                                      j=0;
 190   4                              }
 191   3                              else
 192   3                              {
 193   4                                  break;
 194   4                              }
 195   3                      }
 196   2                      if(i==len)
 197   2                      {
 198   3                              REN=0;
 199   3                              CmdValid=1;
 200   3                      }
 201   2              }
 202   1              else if(!RI && TI)
 203   1              {
 204   2                      TI=0;
 205   2                      len=RevBuffer[0];
 206   2                      for(i=0;i<len+1;i++)
 207   2                      {
 208   3                              SBUF=RevBuffer[i];
 209   3                              while(!TI);
 210   3                              TI=0;                   
 211   3                      }
 212   2                      REN=1;
 213   2              }
 214   1      }
 215          
 216          
 217          
 218            void main( )
 219          {    
 220   1          unsigned char baud;
 221   1           InitializeSystem( );
 222   1          while (1)
 223   1          {   
 224   2                  if (CmdValid)
 225   2                  {
 226   3                          CmdValid = FALSE;
 227   3                          if(RevBuffer[0]==11)            //ÎªÁË¼Ó¿ìÏàÓ¦ËÙ¶È ²âÊÔ·çÃùÆ÷
 228   3                          {
 229   4                              RevBuffer[2]=RevBuffer[1];
 230   4                              RevBuffer[0]=1;         //contact
 231   4                              RevBuffer[1]=0;
 232   4                              CALL_isr_UART();                
 233   4                      LED_GREEN = 1;
 234   4                              delay_10ms(RevBuffer[2]);
 235   4                      LED_GREEN = 0;
 236   4                          }
 237   3                      else if(RevBuffer[0]==13)   //ÉèÖÃÍ¨Ñ¶²¨ÌØÂÊ
 238   3                      {
 239   4                              switch(RevBuffer[1])
 240   4                              {
C51 COMPILER V9.00   MAIN                                                                  02/03/2011 22:43:20 PAGE 5   

 241   5                                      case 0:
 242   5                                              baud=BAUD_9600;
 243   5                                              break;
 244   5                                      case 1:
 245   5                                              baud=BAUD_14400;
 246   5                                              break;
 247   5                                      case 2:
 248   5                                              baud=BAUD_19200;
 249   5                                              break;
 250   5                                      case 3:
 251   5                                              baud=BAUD_28800;
 252   5                                              break;
 253   5                                      case 4:
 254   5                                              baud=BAUD_38400;
 255   5                                              break;
 256   5                                      case 5:
 257   5                                              baud=BAUD_57600;
 258   5                                              break;
 259   5                                      case 6:
 260   5                                              baud=BAUD_115200;
 261   5                                              break;
 262   5                                      default:
 263   5                                              baud=BAUD_9600;
 264   5                                              break;
 265   5                              }                               
 266   4                              RevBuffer[0]=1;         //contact
 267   4                              RevBuffer[1]=0;
 268   4                              CALL_isr_UART();
 269   4                              delay_10ms(5);                  
 270   4                              TR1   = 0;
 271   4                              TH1   = baud;
 272   4                              TL1   = TH1;
 273   4                              delay_10ms(2);
 274   4                              TR1   = TRUE;
 275   4                      }
 276   3      
 277   3                      else
 278   3                      {
 279   4                          iccardcode();
 280   4                              CALL_isr_UART();
 281   4                      }
 282   3      
 283   3      
 284   3      
 285   3               }
 286   2               }
 287   1      }
 288          
 289          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    698    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40       2
   IDATA SIZE       =     34    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
