C51 COMPILER V9.53.0.0   12864                                                             02/05/2015 13:52:38 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN 12864.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "12864.h"
   2          void lcdwait()
   3          {
   4   1        LCD12864_DB=0xFF;
   5   1        _nop_();
   6   1        _nop_();
   7   1        _nop_();
   8   1        _nop_();
   9   1        LCD12864_RS=0;
  10   1        LCD12864_RW=1;
  11   1        LCD12864_E=1;
  12   1        while(LCD12864_DB & 0x80);
  13   1        LCD12864_E=0;
  14   1        _nop_();
  15   1        _nop_();
  16   1        _nop_();
  17   1        _nop_();
  18   1      }
  19          
  20          void lcdwritecmd(unsigned char cmd)
  21          {
  22   1        lcdwait();
  23   1        _nop_();
  24   1        _nop_();
  25   1        _nop_();
  26   1        _nop_();
  27   1        LCD12864_RS=0;
  28   1        LCD12864_RW=0;
  29   1        LCD12864_DB=cmd;
  30   1        LCD12864_E=1;
  31   1        _nop_();
  32   1        _nop_();
  33   1        _nop_();
  34   1        _nop_();
  35   1        LCD12864_E=0;
  36   1      }
  37          
  38          void lcdwritedata(unsigned char dat)
  39          {
  40   1        lcdwait();
  41   1        _nop_();
  42   1        _nop_();
  43   1        _nop_();
  44   1        _nop_();
  45   1        LCD12864_RS=1;
  46   1        LCD12864_RW=0;
  47   1        LCD12864_DB=dat;
  48   1        LCD12864_E=1;
  49   1        _nop_();
  50   1        _nop_();
  51   1        _nop_();
  52   1        _nop_();
  53   1        LCD12864_E=0;
  54   1      }
  55          
C51 COMPILER V9.53.0.0   12864                                                             02/05/2015 13:52:38 PAGE 2   

  56          void lcdinit()
  57          {
  58   1        lcdwritecmd(0x38);
  59   1        lcdwritecmd(0x06);
  60   1        lcdwritecmd(0x01);
  61   1        lcdwritecmd(0x0c);  
  62   1      }
  63          
  64          void lcdsetcursor(unsigned char x, unsigned char y)
  65          {
  66   1        unsigned char address;
  67   1        if(y==0)
  68   1          address=0x80+x;
  69   1        else if(y==1)
  70   1          address=0x90+x;
  71   1        else if(y==2)
  72   1          address=0x88+x;
  73   1        else
  74   1          address=0x98+x;
  75   1        lcdwritecmd(address|0x80);
  76   1      }
  77          
  78          void lcdshowstr(unsigned char x, unsigned char y,
  79                          unsigned char *str)
  80          {
  81   1        lcdsetcursor(x,y);
  82   1        while((*str)!='\0') 
  83   1        {
  84   2           lcdwritedata(*str);
  85   2           str++;
  86   2        }
  87   1      }         
  88          void drawpoint(unsigned char y[])
  89          {
  90   1        unsigned char i,j,k;
  91   1        unsigned long int l;
  92   1        unsigned char x;
  93   1        xdata unsigned char pix[16][64];
  94   1        for(i=0;i<16;i++)
  95   1          for(j=0;j<64;j++)
  96   1                 pix[i][j]=0;
  97   1            for(i=0;i<128;i++)
  98   1                pix[i/8][y[i]]=(0x80>>(i%8)); 
  99   1        
 100   1            for(i=0,j=0;i<9;i+=8,j+=32)
 101   1               {  
 102   2                for(x=0;x<32;x++)
 103   2                  {     
 104   3                     lcdwritecmd(0x34);
 105   3                     lcdwritecmd(0x80+x);
 106   3                     lcdwritecmd(0x80+i); 
 107   3                     lcdwritecmd(0x30);   
 108   3                    for(k=0;k<16;k++) 
 109   3                      lcdwritedata(pix[k][x+j]);
 110   3                  }
 111   2              }
 112   1             lcdwritecmd(0x36); 
 113   1            for(l=0;l<500000;l++);
 114   1      }
 115          
 116            

C51 COMPILER V9.53.0.0   12864                                                             02/05/2015 13:52:38 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    441    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    1024
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
